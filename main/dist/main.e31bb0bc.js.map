{"version":3,"sources":["utility.js","formatJob.js","Fetch_Job.js","index.js"],"names":["getCurrencySymbol","countryCode","currencydb","in","us","au","ca","gb","fr","de","getFormData","form","Array","from","elements","reduce","acc","id","value","console","log","DisplayJobs","job","currency","created","slice","title","company","display_name","salary_max","location","redirect_url","FetchJobs","searchFormSelector","resultsSelector","searchForm","document","querySelector","resultsContainer","setCurrencyCode","endpoint","fetch","then","data","json","toLowerCase","currencySymbol","addEventListener","e","preventDefault","innerHTML","search","endpoint2","response","results","map","join","jobs","jobSearch","setCountryCode","GetForm","icon","toggleSwitch","currentTheme","localStorage","getItem","documentElement","setAttribute","checked","switchTheme","target","setItem","style","transform","color"],"mappings":"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","file":"main.e31bb0bc.js","sourceRoot":"..","sourcesContent":["\r\nexport const  getCurrencySymbol= countryCode => {\r\nconst currencydb= {\r\n    in:'₹',\r\n    us:'$',\r\n    au:'$',\r\n    ca:'$',\r\n    gb:'£',\r\n    fr:'€',\r\n    de:'€',\r\n};\r\n    return currencydb[countryCode];\r\n};\r\n\r\n\r\nexport const getFormData= form => Array\r\n    .from(form.elements)\r\n    .reduce((acc, { id, value }) => ({ [id]: value, ...acc }), {});  //from Mdn docs\r\n    console.log(\"In getform\");\r\n\r\n\r\n","export const DisplayJobs = (job, currency) =>\r\n    `\r\n        <div class=\"card-data\">\r\n            <p class=\"job-posting-time\">\r\n                <span>Posted on</span> ${job.created.slice(0, 10)}\r\n            </p>\r\n            <h3>${job.title}</h3>\r\n            <h4>${job.company.display_name}</h4>\r\n            <p>Up to ${currency}${job.salary_max}</p> \r\n            <div class=\"card-footer\">\r\n                <p>${job.location.display_name}</p>\r\n                <a href=\"${job.redirect_url}\" target=\"_blank\">Know More</a>\r\n            </div>\r\n        </div>\r\n        `;\r\n","import { getCurrencySymbol,getFormData } from './utility';\r\nimport { DisplayJobs } from './formatJob';\r\n\r\nexport class FetchJobs {\r\n\r\n    constructor(searchFormSelector,resultsSelector)\r\n    {\r\n        this.searchForm=document.querySelector(searchFormSelector);\r\n        this.resultsContainer=document.querySelector(resultsSelector);\r\n    }\r\n\r\n \r\n\r\n\r\n    setCountryCode(){\r\n        //In case the IP Address API fails, default would be set to India.\r\n        this.countryCode='in';\r\n        this.setCurrencyCode();\r\n        const endpoint='http://ip-api.com/json';\r\n\r\n        \r\n        fetch(endpoint)\r\n            //.then(data => console.log(data))\r\n            .then(data => data.json())\r\n            //.then(console.log('Is it still not working?'))\r\n            .then(data => { \r\n                \r\n            this.countryCode = data.countryCode.toLowerCase();\r\n            this.setCurrencyCode();\r\n            });\r\n    }\r\n\r\n    setCurrencyCode(){\r\n        //console.log('The');\r\n        this.currencySymbol=getCurrencySymbol(this.countryCode);\r\n    }\r\n\r\n\r\n    GetForm(){\r\n        this.searchForm.addEventListener('submit', (e) => {\r\n            e.preventDefault();          // prevents from submitting the form\r\n            this.resultsContainer.innerHTML='';\r\n            console.log('Query accepted');\r\n            const {search, location } = getFormData(this.searchForm);\r\n            console.log(search);\r\n            const endpoint2=`http://localhost:3000/?search=${search}&location=${location}&country=${this.countryCode}`;\r\n            console.log(endpoint2)\r\n            fetch(endpoint2)   //hard-coded local address\r\n            .then(response => response.json())\r\n            .then(({ results }) => {\r\n            \r\n              return results\r\n                .map(job => DisplayJobs(job, this.currencySymbol))\r\n                .join('');\r\n            })\r\n            .then(jobs => this.resultsContainer.innerHTML = jobs)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { FetchJobs } from \"./Fetch_Job\";\r\n\r\nconst jobSearch = new FetchJobs('#search-form', '.cards');\r\njobSearch.setCountryCode();\r\njobSearch.GetForm();\r\n\r\n//Dark mode\r\nconst icon = document.querySelector('.fa-adjust');\r\nconst toggleSwitch = document.querySelector('.theme-switch input[type=\"checkbox\"]');\r\nconst currentTheme = localStorage.getItem('theme');\r\n\r\nif (currentTheme) {\r\n    document.documentElement.setAttribute('data-theme', currentTheme);\r\n\r\n    if (currentTheme === 'dark') {\r\n        toggleSwitch.checked = true;\r\n    }\r\n}\r\n\r\nfunction switchTheme(e) {\r\n    if (e.target.checked) {\r\n        document.documentElement.setAttribute('data-theme', 'dark');\r\n        localStorage.setItem('theme', 'dark');\r\n        icon.style.transform = 'rotate(180deg)';\r\n        icon.style.color = '#202020';\r\n    }\r\n    else {\r\n        document.documentElement.setAttribute('data-theme', 'light');\r\n        localStorage.setItem('theme', 'light');\r\n        icon.style.transform = 'rotate(-180deg)';\r\n        icon.style.color = '#fff';\r\n    }\r\n}\r\n\r\ntoggleSwitch.addEventListener('change', switchTheme, false);"]}