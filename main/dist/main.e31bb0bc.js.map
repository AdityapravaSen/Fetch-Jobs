{"version":3,"sources":["utility.js","formatJob.js","Fetch_Job.js","index.js"],"names":["getCurrencySymbol","countryCode","currencydb","in","us","au","ca","gb","fr","de","getFormData","form","Array","from","elements","reduce","acc","id","value","console","log","DisplayJobs","job","currency","title","company","display_name","salary_max","location","redirect_url","FetchJobs","searchFormSelector","resultsSelector","searchForm","document","querySelector","resultsContainer","setCurrencyCode","endpoint","fetch","then","data","json","toLowerCase","currencySymbol","addEventListener","e","preventDefault","innerHTML","search","endpoint2","response","results","map","join","jobs","jobSearch","setCountryCode","GetForm"],"mappings":"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","file":"main.e31bb0bc.js","sourceRoot":"..","sourcesContent":["\r\nexport const  getCurrencySymbol= countryCode => {\r\nconst currencydb= {\r\n    in:'₹',\r\n    us:'$',\r\n    au:'$',\r\n    ca:'$',\r\n    gb:'£',\r\n    fr:'€',\r\n    de:'€',\r\n};\r\n    return currencydb[countryCode];\r\n};\r\n\r\n\r\nexport const getFormData= form => Array\r\n    .from(form.elements)\r\n    .reduce((acc, { id, value }) => ({ [id]: value, ...acc }), {});  //from Mdn docs\r\n    console.log(\"In getform\");\r\n\r\n\r\n","export const DisplayJobs = (job, currency) =>\r\n    `\r\n        <div class=\"card-data\">\r\n            <p class=\"job-posting-time\">\r\n                5h ago\r\n            </p>\r\n            <h3>${job.title}</h3>\r\n            <h4>${job.company.display_name}</h4>\r\n            <p>Up to ${currency}${job.salary_max}</p> \r\n            <div class=\"card-footer\">\r\n                <p>${job.location.display_name}</p>\r\n                <a href=\"${job.redirect_url}\" target=\"_blank\">Know More</a>\r\n            </div>\r\n        </div>\r\n        `;\r\n","import { getCurrencySymbol,getFormData } from './utility';\r\nimport { DisplayJobs } from './formatJob';\r\n\r\nexport class FetchJobs {\r\n\r\n    constructor(searchFormSelector,resultsSelector)\r\n    {\r\n        this.searchForm=document.querySelector(searchFormSelector);\r\n        this.resultsContainer=document.querySelector(resultsSelector);\r\n    }\r\n\r\n \r\n\r\n\r\n    setCountryCode(){\r\n        //In case the IP Address API fails, default would be set to India.\r\n        this.countryCode='in';\r\n        this.setCurrencyCode();\r\n        const endpoint='http://ip-api.com/json';\r\n\r\n        \r\n        fetch(endpoint)\r\n            //.then(data => console.log(data))\r\n            .then(data => data.json())\r\n            //.then(console.log('Is it still not working?'))\r\n            .then(data => { \r\n                \r\n            this.countryCode = data.countryCode.toLowerCase();\r\n            this.setCurrencyCode();\r\n            });\r\n    }\r\n\r\n    setCurrencyCode(){\r\n        //console.log('The');\r\n        this.currencySymbol=getCurrencySymbol(this.countryCode);\r\n    }\r\n\r\n\r\n    GetForm(){\r\n        this.searchForm.addEventListener('submit', (e) => {\r\n            e.preventDefault();          // prevents from submitting the form\r\n            this.resultsContainer.innerHTML='';\r\n            console.log('Query accepted');\r\n            const {search, location } = getFormData(this.searchForm);\r\n            console.log(search);\r\n            const endpoint2=`http://localhost:3000/?search=${search}&location=${location}&country=${this.countryCode}`;\r\n            console.log(endpoint2)\r\n            fetch(endpoint2)   //hard-coded local address\r\n            .then(response => response.json())\r\n            .then(({ results }) => {\r\n            \r\n              return results\r\n                .map(job => DisplayJobs(job, this.currencySymbol))\r\n                .join('');\r\n            })\r\n            .then(jobs => this.resultsContainer.innerHTML = jobs)\r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\n","import { FetchJobs } from \"./Fetch_Job\";\r\n\r\nconst jobSearch = new FetchJobs('#search-form', '.cards');\r\njobSearch.setCountryCode();\r\njobSearch.GetForm();"]}